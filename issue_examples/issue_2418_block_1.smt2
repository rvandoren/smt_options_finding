(set-option :produce-models true)
(set-logic all)
(define-fun s11 () (_ bitvec 32) #x00000001)
(define-fun s12 () (_ bitvec 32) #x00000000)
(define-fun s32 () (_ bitvec 32) #x00000005)
(declare-fun s0 () bool)
(declare-fun s1 () bool)
(declare-fun s2 () bool)
(declare-fun s3 () bool)
(declare-fun s4 () bool)
(declare-fun s5 () bool)
(declare-fun s6 () bool)
(declare-fun s7 () bool)
(declare-fun s8 () bool)
(declare-fun s9 () bool)
(define-fun s10 () bool ((_ pbeq 5 1 1 1 1 1 1 1 1 1 1) s0 s1 s2 s3 s4 s5 s6 s7 s8 s9))
(define-fun s13 () (_ bitvec 32) (ite s0 s11 s12))
(define-fun s14 () (_ bitvec 32) (ite s1 s11 s12))
(define-fun s15 () (_ bitvec 32) (bvadd s13 s14))
(define-fun s16 () (_ bitvec 32) (ite s2 s11 s12))
(define-fun s17 () (_ bitvec 32) (bvadd s15 s16))
(define-fun s18 () (_ bitvec 32) (ite s3 s11 s12))
(define-fun s19 () (_ bitvec 32) (bvadd s17 s18))
(define-fun s20 () (_ bitvec 32) (ite s4 s11 s12))
(define-fun s21 () (_ bitvec 32) (bvadd s19 s20))
(define-fun s22 () (_ bitvec 32) (ite s5 s11 s12))
(define-fun s23 () (_ bitvec 32) (bvadd s21 s22))
(define-fun s24 () (_ bitvec 32) (ite s6 s11 s12))
(define-fun s25 () (_ bitvec 32) (bvadd s23 s24))
(define-fun s26 () (_ bitvec 32) (ite s7 s11 s12))
(define-fun s27 () (_ bitvec 32) (bvadd s25 s26))
(define-fun s28 () (_ bitvec 32) (ite s8 s11 s12))
(define-fun s29 () (_ bitvec 32) (bvadd s27 s28))
(define-fun s30 () (_ bitvec 32) (ite s9 s11 s12))
(define-fun s31 () (_ bitvec 32) (bvadd s29 s30))
(define-fun s33 () bool (= s31 s32))
(define-fun s34 () bool (= s10 s33))
(assert (not s34))
(check-sat)