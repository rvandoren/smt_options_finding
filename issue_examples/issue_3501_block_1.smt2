(set-option :rewriter.arith_ineq_lhs true)
(set-option :nlsat.shuffle_vars true)
(set-option :nlsat.randomize false)
(declare-fun e () real)
(declare-fun l () real)
(declare-fun m () real)
(declare-fun a () real)
(declare-fun b () real)
(declare-fun c () real)
(declare-fun d () real)
(declare-fun n () real)
(declare-fun f () real)
(declare-fun o () real)
(declare-fun p () real)
(declare-fun r () real)
(declare-fun g () real)
(declare-fun ep () real)
(declare-fun q () real)
(declare-fun h () real)
(assert (not (exists ((i real))
(let ((?j m) (?k (+ i b))) (=> (and (> p (+ (+ q (/ (* r r) ?j) (+ (/ l l) r))))
(= g c f (+ (/ e ?j)) d 2 n) (= e a o))(=> (= h 0) (= (= ?k  0 ep) (distinct 2 2))))))))
(check-sat)