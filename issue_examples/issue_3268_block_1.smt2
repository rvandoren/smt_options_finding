(set-option :smt.threads 4)
(declare-fun c () ( array int int ))
(declare-fun a () ( array int int ))
(declare-fun arr () ( array int int ))
(declare-fun d () int)
(declare-fun u () int)
(declare-fun i () int)
(assert (let (( ?g (select arr i)) (?e (select a 0)) (d d))
(and (forall (( ?j int )) (xor (and (= d u))
(forall (( ?f int )) (<= (select arr ?f) (select arr ?j)))))( <= ?e ?g )
(forall (( ?h int )) (= (and (<=  d ?h 0))(= (select arr ?h ) 0)))(= (select c d) d))))
(check-sat)