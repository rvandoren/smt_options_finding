(set-option :produce-models true)
(set-logic qf_fp)
(define-fun s5 () (_ floatingpoint 11 53) ((_ to_fp 11 53) roundnearesttiestoeven (/ 1.0 1.0)))
(declare-fun s0 () (_ floatingpoint 11 53))
(define-fun s1 () bool (fp.isnan s0))
(define-fun s2 () bool (fp.isinfinite s0))
(define-fun s3 () bool (or s1 s2))
(define-fun s4 () bool (not s3))
(define-fun s6 () (_ floatingpoint 11 53) (fp.div roundnearesttiestoeven s5 s0))
(define-fun s7 () bool (fp.isnan s6))
(define-fun s8 () bool (fp.isinfinite s6))
(define-fun s9 () bool (or s7 s8))
(define-fun s10 () bool (not s9))
(define-fun s11 () bool (and s4 s10))
(define-fun s12 () (_ floatingpoint 11 53) (fp.mul roundnearesttiestoeven s0 s6))
(define-fun s13 () bool (fp.eq s5 s12))
(assert s11)
(assert (not s13))
(check-sat)