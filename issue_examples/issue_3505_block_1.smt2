(set-option :produce-models true)
(set-logic all) ; has user-defined sorts, using catch-all.
(declare-datatypes ((day 0)) (((mon) (tue) (wed) (thu) (fri) (sat) (sun))))
(define-fun s1 () day sat)
(define-fun s3 () day sun)
(define-fun s7 () day mon)
(define-fun s9 () (_ bitvec 8) #x00)
(define-fun s10 () day tue)
(define-fun s12 () (_ bitvec 8) #x01)
(define-fun s13 () day wed)
(define-fun s15 () (_ bitvec 8) #x02)
(define-fun s16 () day thu)
(define-fun s18 () (_ bitvec 8) #x03)
(define-fun s19 () day fri)
(define-fun s21 () (_ bitvec 8) #x04)
(define-fun s22 () (_ bitvec 8) #x05)
(define-fun s23 () (_ bitvec 8) #x06)
(declare-fun s0 () day)
(declare-fun s30 () (_ bitvec 8))
(define-fun s2 () bool (= s0 s1))
(define-fun s4 () bool (= s0 s3))
(define-fun s5 () bool (or s2 s4))
(define-fun s6 () bool (not s5))
(define-fun s8 () bool (= s0 s7))
(define-fun s11 () bool (= s0 s10))
(define-fun s14 () bool (= s0 s13))
(define-fun s17 () bool (= s0 s16))
(define-fun s20 () bool (= s0 s19))
(define-fun s24 () (_ bitvec 8) (ite s2 s22 s23))
(define-fun s25 () (_ bitvec 8) (ite s20 s21 s24))
(define-fun s26 () (_ bitvec 8) (ite s17 s18 s25))
(define-fun s27 () (_ bitvec 8) (ite s14 s15 s26))
(define-fun s28 () (_ bitvec 8) (ite s11 s12 s27))
(define-fun s29 () (_ bitvec 8) (ite s8 s9 s28))
(assert s6)
(assert (= s29 s30))
(maximize s30)
(check-sat)