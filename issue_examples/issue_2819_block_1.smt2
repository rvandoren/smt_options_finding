(set-option :produce-models true)
(set-logic all) ; has unbounded values, using catch-all.
(declare-datatypes ((state 0)) (((idle) (ready) (critical))))
(define-fun state_constrindex ((x state)) int
(ite (= x idle) 0 (ite (= x ready) 1 2))
)
(define-fun s4 () int 20)
(define-fun s6 () state idle)
(define-fun s7 () int 0)
(define-fun s10 () state ready)
(define-fun s13 () int 1)
(define-fun s26 () state critical)
(define-fun s409 () int 2)
(define-fun s857 () (seq bool) (as seq.empty (seq bool)))
(declare-fun s0 () (seq state)) ; tracks user variable "p1"
(declare-fun s1 () (seq state)) ; tracks user variable "p2"
(declare-fun s2 () (seq int)) ; tracks user variable "turns"
(define-fun s3 () int (seq.len s0))
(define-fun s5 () bool (= s3 s4))
(define-fun s8 () state (seq.nth s0 s7))
(define-fun s9 () bool (= s6 s8))
(define-fun s11 () bool (= s8 s10))
(define-fun s12 () bool (or s9 s11))
(define-fun s14 () int (- s3 s13))
(define-fun s15 () (seq state) (seq.extract s0 s13 s14))
(define-fun s16 () state (seq.nth s15 s7))
(define-fun s17 () bool (= s6 s16))
(define-fun s18 () bool (= s10 s16))
(define-fun s19 () bool (or s17 s18))
(define-fun s20 () int (seq.len s2))
(define-fun s21 () int (- s20 s13))
(define-fun s22 () (seq int) (seq.extract s2 s13 s21))
(define-fun s23 () int (seq.nth s22 s7))
(define-fun s24 () bool (= s13 s23))
(define-fun s25 () bool (and s11 s24))
(define-fun s27 () bool (= s16 s26))
(define-fun s28 () bool (= s8 s26))
(define-fun s29 () bool (or s17 s27))
(define-fun s30 () bool (= s8 s16))
(define-fun s31 () bool (ite s28 s29 s30))
(define-fun s32 () bool (ite s25 s27 s31))
(define-fun s33 () bool (ite s9 s19 s32))
(define-fun s34 () int (seq.len s15))
(define-fun s35 () int (- s34 s13))
(define-fun s36 () (seq state) (seq.extract s15 s13 s35))
(define-fun s37 () state (seq.nth s36 s7))
(define-fun s38 () bool (= s6 s37))
(define-fun s39 () bool (= s10 s37))
(define-fun s40 () bool (or s38 s39))
(define-fun s41 () int (seq.len s22))
(define-fun s42 () int (- s41 s13))
(define-fun s43 () (seq int) (seq.extract s22 s13 s42))
(define-fun s44 () int (seq.nth s43 s7))
(define-fun s45 () bool (= s13 s44))
(define-fun s46 () bool (and s18 s45))
(define-fun s47 () bool (= s26 s37))
(define-fun s48 () bool (or s38 s47))
(define-fun s49 () bool (= s16 s37))
(define-fun s50 () bool (ite s27 s48 s49))
(define-fun s51 () bool (ite s46 s47 s50))
(define-fun s52 () bool (ite s17 s40 s51))
(define-fun s53 () int (seq.len s36))
(define-fun s54 () int (- s53 s13))
(define-fun s55 () (seq state) (seq.extract s36 s13 s54))
(define-fun s56 () state (seq.nth s55 s7))
(define-fun s57 () bool (= s6 s56))
(define-fun s58 () bool (= s10 s56))
(define-fun s59 () bool (or s57 s58))
(define-fun s60 () int (seq.len s43))
(define-fun s61 () int (- s60 s13))
(define-fun s62 () (seq int) (seq.extract s43 s13 s61))
(define-fun s63 () int (seq.nth s62 s7))
(define-fun s64 () bool (= s13 s63))
(define-fun s65 () bool (and s39 s64))
(define-fun s66 () bool (= s26 s56))
(define-fun s67 () bool (or s57 s66))
(define-fun s68 () bool (= s37 s56))
(define-fun s69 () bool (ite s47 s67 s68))
(define-fun s70 () bool (ite s65 s66 s69))
(define-fun s71 () bool (ite s38 s59 s70))
(define-fun s72 () int (seq.len s55))
(define-fun s73 () int (- s72 s13))
(define-fun s74 () (seq state) (seq.extract s55 s13 s73))
(define-fun s75 () state (seq.nth s74 s7))
(define-fun s76 () bool (= s6 s75))
(define-fun s77 () bool (= s10 s75))
(define-fun s78 () bool (or s76 s77))
(define-fun s79 () int (seq.len s62))
(define-fun s80 () int (- s79 s13))
(define-fun s81 () (seq int) (seq.extract s62 s13 s80))
(define-fun s82 () int (seq.nth s81 s7))
(define-fun s83 () bool (= s13 s82))
(define-fun s84 () bool (and s58 s83))
(define-fun s85 () bool (= s26 s75))
(define-fun s86 () bool (or s76 s85))
(define-fun s87 () bool (= s56 s75))
(define-fun s88 () bool (ite s66 s86 s87))
(define-fun s89 () bool (ite s84 s85 s88))
(define-fun s90 () bool (ite s57 s78 s89))
(define-fun s91 () int (seq.len s74))
(define-fun s92 () int (- s91 s13))
(define-fun s93 () (seq state) (seq.extract s74 s13 s92))
(define-fun s94 () state (seq.nth s93 s7))
(define-fun s95 () bool (= s6 s94))
(define-fun s96 () bool (= s10 s94))
(define-fun s97 () bool (or s95 s96))
(define-fun s98 () int (seq.len s81))
(define-fun s99 () int (- s98 s13))
(define-fun s100 () (seq int) (seq.extract s81 s13 s99))
(define-fun s101 () int (seq.nth s100 s7))
(define-fun s102 () bool (= s13 s101))
(define-fun s103 () bool (and s77 s102))
(define-fun s104 () bool (= s26 s94))
(define-fun s105 () bool (or s95 s104))
(define-fun s106 () bool (= s75 s94))
(define-fun s107 () bool (ite s85 s105 s106))
(define-fun s108 () bool (ite s103 s104 s107))
(define-fun s109 () bool (ite s76 s97 s108))
(define-fun s110 () int (seq.len s93))
(define-fun s111 () int (- s110 s13))
(define-fun s112 () (seq state) (seq.extract s93 s13 s111))
(define-fun s113 () state (seq.nth s112 s7))
(define-fun s114 () bool (= s6 s113))
(define-fun s115 () bool (= s10 s113))
(define-fun s116 () bool (or s114 s115))
(define-fun s117 () int (seq.len s100))
(define-fun s118 () int (- s117 s13))
(define-fun s119 () (seq int) (seq.extract s100 s13 s118))
(define-fun s120 () int (seq.nth s119 s7))
(define-fun s121 () bool (= s13 s120))
(define-fun s122 () bool (and s96 s121))
(define-fun s123 () bool (= s26 s113))
(define-fun s124 () bool (or s114 s123))
(define-fun s125 () bool (= s94 s113))
(define-fun s126 () bool (ite s104 s124 s125))
(define-fun s127 () bool (ite s122 s123 s126))
(define-fun s128 () bool (ite s95 s116 s127))
(define-fun s129 () int (seq.len s112))
(define-fun s130 () int (- s129 s13))
(define-fun s131 () (seq state) (seq.extract s112 s13 s130))
(define-fun s132 () state (seq.nth s131 s7))
(define-fun s133 () bool (= s6 s132))
(define-fun s134 () bool (= s10 s132))
(define-fun s135 () bool (or s133 s134))
(define-fun s136 () int (seq.len s119))
(define-fun s137 () int (- s136 s13))
(define-fun s138 () (seq int) (seq.extract s119 s13 s137))
(define-fun s139 () int (seq.nth s138 s7))
(define-fun s140 () bool (= s13 s139))
(define-fun s141 () bool (and s115 s140))
(define-fun s142 () bool (= s26 s132))
(define-fun s143 () bool (or s133 s142))
(define-fun s144 () bool (= s113 s132))
(define-fun s145 () bool (ite s123 s143 s144))
(define-fun s146 () bool (ite s141 s142 s145))
(define-fun s147 () bool (ite s114 s135 s146))
(define-fun s148 () int (seq.len s131))
(define-fun s149 () int (- s148 s13))
(define-fun s150 () (seq state) (seq.extract s131 s13 s149))
(define-fun s151 () state (seq.nth s150 s7))
(define-fun s152 () bool (= s6 s151))
(define-fun s153 () bool (= s10 s151))
(define-fun s154 () bool (or s152 s153))
(define-fun s155 () int (seq.len s138))
(define-fun s156 () int (- s155 s13))
(define-fun s157 () (seq int) (seq.extract s138 s13 s156))
(define-fun s158 () int (seq.nth s157 s7))
(define-fun s159 () bool (= s13 s158))
(define-fun s160 () bool (and s134 s159))
(define-fun s161 () bool (= s26 s151))
(define-fun s162 () bool (or s152 s161))
(define-fun s163 () bool (= s132 s151))
(define-fun s164 () bool (ite s142 s162 s163))
(define-fun s165 () bool (ite s160 s161 s164))
(define-fun s166 () bool (ite s133 s154 s165))
(define-fun s167 () int (seq.len s150))
(define-fun s168 () int (- s167 s13))
(define-fun s169 () (seq state) (seq.extract s150 s13 s168))
(define-fun s170 () state (seq.nth s169 s7))
(define-fun s171 () bool (= s6 s170))
(define-fun s172 () bool (= s10 s170))
(define-fun s173 () bool (or s171 s172))
(define-fun s174 () int (seq.len s157))
(define-fun s175 () int (- s174 s13))
(define-fun s176 () (seq int) (seq.extract s157 s13 s175))
(define-fun s177 () int (seq.nth s176 s7))
(define-fun s178 () bool (= s13 s177))
(define-fun s179 () bool (and s153 s178))
(define-fun s180 () bool (= s26 s170))
(define-fun s181 () bool (or s171 s180))
(define-fun s182 () bool (= s151 s170))
(define-fun s183 () bool (ite s161 s181 s182))
(define-fun s184 () bool (ite s179 s180 s183))
(define-fun s185 () bool (ite s152 s173 s184))
(define-fun s186 () int (seq.len s169))
(define-fun s187 () int (- s186 s13))
(define-fun s188 () (seq state) (seq.extract s169 s13 s187))
(define-fun s189 () state (seq.nth s188 s7))
(define-fun s190 () bool (= s6 s189))
(define-fun s191 () bool (= s10 s189))
(define-fun s192 () bool (or s190 s191))
(define-fun s193 () int (seq.len s176))
(define-fun s194 () int (- s193 s13))
(define-fun s195 () (seq int) (seq.extract s176 s13 s194))
(define-fun s196 () int (seq.nth s195 s7))
(define-fun s197 () bool (= s13 s196))
(define-fun s198 () bool (and s172 s197))
(define-fun s199 () bool (= s26 s189))
(define-fun s200 () bool (or s190 s199))
(define-fun s201 () bool (= s170 s189))
(define-fun s202 () bool (ite s180 s200 s201))
(define-fun s203 () bool (ite s198 s199 s202))
(define-fun s204 () bool (ite s171 s192 s203))
(define-fun s205 () int (seq.len s188))
(define-fun s206 () int (- s205 s13))
(define-fun s207 () (seq state) (seq.extract s188 s13 s206))
(define-fun s208 () state (seq.nth s207 s7))
(define-fun s209 () bool (= s6 s208))
(define-fun s210 () bool (= s10 s208))
(define-fun s211 () bool (or s209 s210))
(define-fun s212 () int (seq.len s195))
(define-fun s213 () int (- s212 s13))
(define-fun s214 () (seq int) (seq.extract s195 s13 s213))
(define-fun s215 () int (seq.nth s214 s7))
(define-fun s216 () bool (= s13 s215))
(define-fun s217 () bool (and s191 s216))
(define-fun s218 () bool (= s26 s208))
(define-fun s219 () bool (or s209 s218))
(define-fun s220 () bool (= s189 s208))
(define-fun s221 () bool (ite s199 s219 s220))
(define-fun s222 () bool (ite s217 s218 s221))
(define-fun s223 () bool (ite s190 s211 s222))
(define-fun s224 () int (seq.len s207))
(define-fun s225 () int (- s224 s13))
(define-fun s226 () (seq state) (seq.extract s207 s13 s225))
(define-fun s227 () state (seq.nth s226 s7))
(define-fun s228 () bool (= s6 s227))
(define-fun s229 () bool (= s10 s227))
(define-fun s230 () bool (or s228 s229))
(define-fun s231 () int (seq.len s214))
(define-fun s232 () int (- s231 s13))
(define-fun s233 () (seq int) (seq.extract s214 s13 s232))
(define-fun s234 () int (seq.nth s233 s7))
(define-fun s235 () bool (= s13 s234))
(define-fun s236 () bool (and s210 s235))
(define-fun s237 () bool (= s26 s227))
(define-fun s238 () bool (or s228 s237))
(define-fun s239 () bool (= s208 s227))
(define-fun s240 () bool (ite s218 s238 s239))
(define-fun s241 () bool (ite s236 s237 s240))
(define-fun s242 () bool (ite s209 s230 s241))
(define-fun s243 () int (seq.len s226))
(define-fun s244 () int (- s243 s13))
(define-fun s245 () (seq state) (seq.extract s226 s13 s244))
(define-fun s246 () state (seq.nth s245 s7))
(define-fun s247 () bool (= s6 s246))
(define-fun s248 () bool (= s10 s246))
(define-fun s249 () bool (or s247 s248))
(define-fun s250 () int (seq.len s233))
(define-fun s251 () int (- s250 s13))
(define-fun s252 () (seq int) (seq.extract s233 s13 s251))
(define-fun s253 () int (seq.nth s252 s7))
(define-fun s254 () bool (= s13 s253))
(define-fun s255 () bool (and s229 s254))
(define-fun s256 () bool (= s26 s246))
(define-fun s257 () bool (or s247 s256))
(define-fun s258 () bool (= s227 s246))
(define-fun s259 () bool (ite s237 s257 s258))
(define-fun s260 () bool (ite s255 s256 s259))
(define-fun s261 () bool (ite s228 s249 s260))
(define-fun s262 () int (seq.len s245))
(define-fun s263 () int (- s262 s13))
(define-fun s264 () (seq state) (seq.extract s245 s13 s263))
(define-fun s265 () state (seq.nth s264 s7))
(define-fun s266 () bool (= s6 s265))
(define-fun s267 () bool (= s10 s265))
(define-fun s268 () bool (or s266 s267))
(define-fun s269 () int (seq.len s252))
(define-fun s270 () int (- s269 s13))
(define-fun s271 () (seq int) (seq.extract s252 s13 s270))
(define-fun s272 () int (seq.nth s271 s7))
(define-fun s273 () bool (= s13 s272))
(define-fun s274 () bool (and s248 s273))
(define-fun s275 () bool (= s26 s265))
(define-fun s276 () bool (or s266 s275))
(define-fun s277 () bool (= s246 s265))
(define-fun s278 () bool (ite s256 s276 s277))
(define-fun s279 () bool (ite s274 s275 s278))
(define-fun s280 () bool (ite s247 s268 s279))
(define-fun s281 () int (seq.len s264))
(define-fun s282 () int (- s281 s13))
(define-fun s283 () (seq state) (seq.extract s264 s13 s282))
(define-fun s284 () state (seq.nth s283 s7))
(define-fun s285 () bool (= s6 s284))
(define-fun s286 () bool (= s10 s284))
(define-fun s287 () bool (or s285 s286))
(define-fun s288 () int (seq.len s271))
(define-fun s289 () int (- s288 s13))
(define-fun s290 () (seq int) (seq.extract s271 s13 s289))
(define-fun s291 () int (seq.nth s290 s7))
(define-fun s292 () bool (= s13 s291))
(define-fun s293 () bool (and s267 s292))
(define-fun s294 () bool (= s26 s284))
(define-fun s295 () bool (or s285 s294))
(define-fun s296 () bool (= s265 s284))
(define-fun s297 () bool (ite s275 s295 s296))
(define-fun s298 () bool (ite s293 s294 s297))
(define-fun s299 () bool (ite s266 s287 s298))
(define-fun s300 () int (seq.len s283))
(define-fun s301 () int (- s300 s13))
(define-fun s302 () (seq state) (seq.extract s283 s13 s301))
(define-fun s303 () state (seq.nth s302 s7))
(define-fun s304 () bool (= s6 s303))
(define-fun s305 () bool (= s10 s303))
(define-fun s306 () bool (or s304 s305))
(define-fun s307 () int (seq.len s290))
(define-fun s308 () int (- s307 s13))
(define-fun s309 () (seq int) (seq.extract s290 s13 s308))
(define-fun s310 () int (seq.nth s309 s7))
(define-fun s311 () bool (= s13 s310))
(define-fun s312 () bool (and s286 s311))
(define-fun s313 () bool (= s26 s303))
(define-fun s314 () bool (or s304 s313))
(define-fun s315 () bool (= s284 s303))
(define-fun s316 () bool (ite s294 s314 s315))
(define-fun s317 () bool (ite s312 s313 s316))
(define-fun s318 () bool (ite s285 s306 s317))
(define-fun s319 () int (seq.len s302))
(define-fun s320 () int (- s319 s13))
(define-fun s321 () (seq state) (seq.extract s302 s13 s320))
(define-fun s322 () state (seq.nth s321 s7))
(define-fun s323 () bool (= s6 s322))
(define-fun s324 () bool (= s10 s322))
(define-fun s325 () bool (or s323 s324))
(define-fun s326 () int (seq.len s309))
(define-fun s327 () int (- s326 s13))
(define-fun s328 () (seq int) (seq.extract s309 s13 s327))
(define-fun s329 () int (seq.nth s328 s7))
(define-fun s330 () bool (= s13 s329))
(define-fun s331 () bool (and s305 s330))
(define-fun s332 () bool (= s26 s322))
(define-fun s333 () bool (or s323 s332))
(define-fun s334 () bool (= s303 s322))
(define-fun s335 () bool (ite s313 s333 s334))
(define-fun s336 () bool (ite s331 s332 s335))
(define-fun s337 () bool (ite s304 s325 s336))
(define-fun s338 () int (seq.len s321))
(define-fun s339 () int (- s338 s13))
(define-fun s340 () (seq state) (seq.extract s321 s13 s339))
(define-fun s341 () state (seq.nth s340 s7))
(define-fun s342 () bool (= s6 s341))
(define-fun s343 () bool (= s10 s341))
(define-fun s344 () bool (or s342 s343))
(define-fun s345 () int (seq.len s328))
(define-fun s346 () int (- s345 s13))
(define-fun s347 () (seq int) (seq.extract s328 s13 s346))
(define-fun s348 () int (seq.nth s347 s7))
(define-fun s349 () bool (= s13 s348))
(define-fun s350 () bool (and s324 s349))
(define-fun s351 () bool (= s26 s341))
(define-fun s352 () bool (or s342 s351))
(define-fun s353 () bool (= s322 s341))
(define-fun s354 () bool (ite s332 s352 s353))
(define-fun s355 () bool (ite s350 s351 s354))
(define-fun s356 () bool (ite s323 s344 s355))
(define-fun s357 () int (seq.len s340))
(define-fun s358 () int (- s357 s13))
(define-fun s359 () (seq state) (seq.extract s340 s13 s358))
(define-fun s360 () state (seq.nth s359 s7))
(define-fun s361 () bool (= s6 s360))
(define-fun s362 () bool (= s10 s360))
(define-fun s363 () bool (or s361 s362))
(define-fun s364 () int (seq.len s347))
(define-fun s365 () int (- s364 s13))
(define-fun s366 () (seq int) (seq.extract s347 s13 s365))
(define-fun s367 () int (seq.nth s366 s7))
(define-fun s368 () bool (= s13 s367))
(define-fun s369 () bool (and s343 s368))
(define-fun s370 () bool (= s26 s360))
(define-fun s371 () bool (or s361 s370))
(define-fun s372 () bool (= s341 s360))
(define-fun s373 () bool (ite s351 s371 s372))
(define-fun s374 () bool (ite s369 s370 s373))
(define-fun s375 () bool (ite s342 s363 s374))
(define-fun s376 () bool (and s356 s375))
(define-fun s377 () bool (and s337 s376))
(define-fun s378 () bool (and s318 s377))
(define-fun s379 () bool (and s299 s378))
(define-fun s380 () bool (and s280 s379))
(define-fun s381 () bool (and s261 s380))
(define-fun s382 () bool (and s242 s381))
(define-fun s383 () bool (and s223 s382))
(define-fun s384 () bool (and s204 s383))
(define-fun s385 () bool (and s185 s384))
(define-fun s386 () bool (and s166 s385))
(define-fun s387 () bool (and s147 s386))
(define-fun s388 () bool (and s128 s387))
(define-fun s389 () bool (and s109 s388))
(define-fun s390 () bool (and s90 s389))
(define-fun s391 () bool (and s71 s390))
(define-fun s392 () bool (and s52 s391))
(define-fun s393 () bool (and s33 s392))
(define-fun s394 () bool (and s12 s393))
(define-fun s395 () bool (and s9 s394))
(define-fun s396 () bool (and s5 s395))
(define-fun s397 () int (seq.len s1))
(define-fun s398 () bool (= s4 s397))
(define-fun s399 () state (seq.nth s1 s7))
(define-fun s400 () bool (= s6 s399))
(define-fun s401 () bool (= s10 s399))
(define-fun s402 () bool (or s400 s401))
(define-fun s403 () int (- s397 s13))
(define-fun s404 () (seq state) (seq.extract s1 s13 s403))
(define-fun s405 () state (seq.nth s404 s7))
(define-fun s406 () bool (= s6 s405))
(define-fun s407 () bool (= s10 s405))
(define-fun s408 () bool (or s406 s407))
(define-fun s410 () bool (= s23 s409))
(define-fun s411 () bool (and s401 s410))
(define-fun s412 () bool (= s26 s405))
(define-fun s413 () bool (= s26 s399))
(define-fun s414 () bool (or s406 s412))
(define-fun s415 () bool (= s399 s405))
(define-fun s416 () bool (ite s413 s414 s415))
(define-fun s417 () bool (ite s411 s412 s416))
(define-fun s418 () bool (ite s400 s408 s417))
(define-fun s419 () int (seq.len s404))
(define-fun s420 () int (- s419 s13))
(define-fun s421 () (seq state) (seq.extract s404 s13 s420))
(define-fun s422 () state (seq.nth s421 s7))
(define-fun s423 () bool (= s6 s422))
(define-fun s424 () bool (= s10 s422))
(define-fun s425 () bool (or s423 s424))
(define-fun s426 () bool (= s44 s409))
(define-fun s427 () bool (and s407 s426))
(define-fun s428 () bool (= s26 s422))
(define-fun s429 () bool (or s423 s428))
(define-fun s430 () bool (= s405 s422))
(define-fun s431 () bool (ite s412 s429 s430))
(define-fun s432 () bool (ite s427 s428 s431))
(define-fun s433 () bool (ite s406 s425 s432))
(define-fun s434 () int (seq.len s421))
(define-fun s435 () int (- s434 s13))
(define-fun s436 () (seq state) (seq.extract s421 s13 s435))
(define-fun s437 () state (seq.nth s436 s7))
(define-fun s438 () bool (= s6 s437))
(define-fun s439 () bool (= s10 s437))
(define-fun s440 () bool (or s438 s439))
(define-fun s441 () bool (= s63 s409))
(define-fun s442 () bool (and s424 s441))
(define-fun s443 () bool (= s26 s437))
(define-fun s444 () bool (or s438 s443))
(define-fun s445 () bool (= s422 s437))
(define-fun s446 () bool (ite s428 s444 s445))
(define-fun s447 () bool (ite s442 s443 s446))
(define-fun s448 () bool (ite s423 s440 s447))
(define-fun s449 () int (seq.len s436))
(define-fun s450 () int (- s449 s13))
(define-fun s451 () (seq state) (seq.extract s436 s13 s450))
(define-fun s452 () state (seq.nth s451 s7))
(define-fun s453 () bool (= s6 s452))
(define-fun s454 () bool (= s10 s452))
(define-fun s455 () bool (or s453 s454))
(define-fun s456 () bool (= s82 s409))
(define-fun s457 () bool (and s439 s456))
(define-fun s458 () bool (= s26 s452))
(define-fun s459 () bool (or s453 s458))
(define-fun s460 () bool (= s437 s452))
(define-fun s461 () bool (ite s443 s459 s460))
(define-fun s462 () bool (ite s457 s458 s461))
(define-fun s463 () bool (ite s438 s455 s462))
(define-fun s464 () int (seq.len s451))
(define-fun s465 () int (- s464 s13))
(define-fun s466 () (seq state) (seq.extract s451 s13 s465))
(define-fun s467 () state (seq.nth s466 s7))
(define-fun s468 () bool (= s6 s467))
(define-fun s469 () bool (= s10 s467))
(define-fun s470 () bool (or s468 s469))
(define-fun s471 () bool (= s101 s409))
(define-fun s472 () bool (and s454 s471))
(define-fun s473 () bool (= s26 s467))
(define-fun s474 () bool (or s468 s473))
(define-fun s475 () bool (= s452 s467))
(define-fun s476 () bool (ite s458 s474 s475))
(define-fun s477 () bool (ite s472 s473 s476))
(define-fun s478 () bool (ite s453 s470 s477))
(define-fun s479 () int (seq.len s466))
(define-fun s480 () int (- s479 s13))
(define-fun s481 () (seq state) (seq.extract s466 s13 s480))
(define-fun s482 () state (seq.nth s481 s7))
(define-fun s483 () bool (= s6 s482))
(define-fun s484 () bool (= s10 s482))
(define-fun s485 () bool (or s483 s484))
(define-fun s486 () bool (= s120 s409))
(define-fun s487 () bool (and s469 s486))
(define-fun s488 () bool (= s26 s482))
(define-fun s489 () bool (or s483 s488))
(define-fun s490 () bool (= s467 s482))
(define-fun s491 () bool (ite s473 s489 s490))
(define-fun s492 () bool (ite s487 s488 s491))
(define-fun s493 () bool (ite s468 s485 s492))
(define-fun s494 () int (seq.len s481))
(define-fun s495 () int (- s494 s13))
(define-fun s496 () (seq state) (seq.extract s481 s13 s495))
(define-fun s497 () state (seq.nth s496 s7))
(define-fun s498 () bool (= s6 s497))
(define-fun s499 () bool (= s10 s497))
(define-fun s500 () bool (or s498 s499))
(define-fun s501 () bool (= s139 s409))
(define-fun s502 () bool (and s484 s501))
(define-fun s503 () bool (= s26 s497))
(define-fun s504 () bool (or s498 s503))
(define-fun s505 () bool (= s482 s497))
(define-fun s506 () bool (ite s488 s504 s505))
(define-fun s507 () bool (ite s502 s503 s506))
(define-fun s508 () bool (ite s483 s500 s507))
(define-fun s509 () int (seq.len s496))
(define-fun s510 () int (- s509 s13))
(define-fun s511 () (seq state) (seq.extract s496 s13 s510))
(define-fun s512 () state (seq.nth s511 s7))
(define-fun s513 () bool (= s6 s512))
(define-fun s514 () bool (= s10 s512))
(define-fun s515 () bool (or s513 s514))
(define-fun s516 () bool (= s158 s409))
(define-fun s517 () bool (and s499 s516))
(define-fun s518 () bool (= s26 s512))
(define-fun s519 () bool (or s513 s518))
(define-fun s520 () bool (= s497 s512))
(define-fun s521 () bool (ite s503 s519 s520))
(define-fun s522 () bool (ite s517 s518 s521))
(define-fun s523 () bool (ite s498 s515 s522))
(define-fun s524 () int (seq.len s511))
(define-fun s525 () int (- s524 s13))
(define-fun s526 () (seq state) (seq.extract s511 s13 s525))
(define-fun s527 () state (seq.nth s526 s7))
(define-fun s528 () bool (= s6 s527))
(define-fun s529 () bool (= s10 s527))
(define-fun s530 () bool (or s528 s529))
(define-fun s531 () bool (= s177 s409))
(define-fun s532 () bool (and s514 s531))
(define-fun s533 () bool (= s26 s527))
(define-fun s534 () bool (or s528 s533))
(define-fun s535 () bool (= s512 s527))
(define-fun s536 () bool (ite s518 s534 s535))
(define-fun s537 () bool (ite s532 s533 s536))
(define-fun s538 () bool (ite s513 s530 s537))
(define-fun s539 () int (seq.len s526))
(define-fun s540 () int (- s539 s13))
(define-fun s541 () (seq state) (seq.extract s526 s13 s540))
(define-fun s542 () state (seq.nth s541 s7))
(define-fun s543 () bool (= s6 s542))
(define-fun s544 () bool (= s10 s542))
(define-fun s545 () bool (or s543 s544))
(define-fun s546 () bool (= s196 s409))
(define-fun s547 () bool (and s529 s546))
(define-fun s548 () bool (= s26 s542))
(define-fun s549 () bool (or s543 s548))
(define-fun s550 () bool (= s527 s542))
(define-fun s551 () bool (ite s533 s549 s550))
(define-fun s552 () bool (ite s547 s548 s551))
(define-fun s553 () bool (ite s528 s545 s552))
(define-fun s554 () int (seq.len s541))
(define-fun s555 () int (- s554 s13))
(define-fun s556 () (seq state) (seq.extract s541 s13 s555))
(define-fun s557 () state (seq.nth s556 s7))
(define-fun s558 () bool (= s6 s557))
(define-fun s559 () bool (= s10 s557))
(define-fun s560 () bool (or s558 s559))
(define-fun s561 () bool (= s215 s409))
(define-fun s562 () bool (and s544 s561))
(define-fun s563 () bool (= s26 s557))
(define-fun s564 () bool (or s558 s563))
(define-fun s565 () bool (= s542 s557))
(define-fun s566 () bool (ite s548 s564 s565))
(define-fun s567 () bool (ite s562 s563 s566))
(define-fun s568 () bool (ite s543 s560 s567))
(define-fun s569 () int (seq.len s556))
(define-fun s570 () int (- s569 s13))
(define-fun s571 () (seq state) (seq.extract s556 s13 s570))
(define-fun s572 () state (seq.nth s571 s7))
(define-fun s573 () bool (= s6 s572))
(define-fun s574 () bool (= s10 s572))
(define-fun s575 () bool (or s573 s574))
(define-fun s576 () bool (= s234 s409))
(define-fun s577 () bool (and s559 s576))
(define-fun s578 () bool (= s26 s572))
(define-fun s579 () bool (or s573 s578))
(define-fun s580 () bool (= s557 s572))
(define-fun s581 () bool (ite s563 s579 s580))
(define-fun s582 () bool (ite s577 s578 s581))
(define-fun s583 () bool (ite s558 s575 s582))
(define-fun s584 () int (seq.len s571))
(define-fun s585 () int (- s584 s13))
(define-fun s586 () (seq state) (seq.extract s571 s13 s585))
(define-fun s587 () state (seq.nth s586 s7))
(define-fun s588 () bool (= s6 s587))
(define-fun s589 () bool (= s10 s587))
(define-fun s590 () bool (or s588 s589))
(define-fun s591 () bool (= s253 s409))
(define-fun s592 () bool (and s574 s591))
(define-fun s593 () bool (= s26 s587))
(define-fun s594 () bool (or s588 s593))
(define-fun s595 () bool (= s572 s587))
(define-fun s596 () bool (ite s578 s594 s595))
(define-fun s597 () bool (ite s592 s593 s596))
(define-fun s598 () bool (ite s573 s590 s597))
(define-fun s599 () int (seq.len s586))
(define-fun s600 () int (- s599 s13))
(define-fun s601 () (seq state) (seq.extract s586 s13 s600))
(define-fun s602 () state (seq.nth s601 s7))
(define-fun s603 () bool (= s6 s602))
(define-fun s604 () bool (= s10 s602))
(define-fun s605 () bool (or s603 s604))
(define-fun s606 () bool (= s272 s409))
(define-fun s607 () bool (and s589 s606))
(define-fun s608 () bool (= s26 s602))
(define-fun s609 () bool (or s603 s608))
(define-fun s610 () bool (= s587 s602))
(define-fun s611 () bool (ite s593 s609 s610))
(define-fun s612 () bool (ite s607 s608 s611))
(define-fun s613 () bool (ite s588 s605 s612))
(define-fun s614 () int (seq.len s601))
(define-fun s615 () int (- s614 s13))
(define-fun s616 () (seq state) (seq.extract s601 s13 s615))
(define-fun s617 () state (seq.nth s616 s7))
(define-fun s618 () bool (= s6 s617))
(define-fun s619 () bool (= s10 s617))
(define-fun s620 () bool (or s618 s619))
(define-fun s621 () bool (= s291 s409))
(define-fun s622 () bool (and s604 s621))
(define-fun s623 () bool (= s26 s617))
(define-fun s624 () bool (or s618 s623))
(define-fun s625 () bool (= s602 s617))
(define-fun s626 () bool (ite s608 s624 s625))
(define-fun s627 () bool (ite s622 s623 s626))
(define-fun s628 () bool (ite s603 s620 s627))
(define-fun s629 () int (seq.len s616))
(define-fun s630 () int (- s629 s13))
(define-fun s631 () (seq state) (seq.extract s616 s13 s630))
(define-fun s632 () state (seq.nth s631 s7))
(define-fun s633 () bool (= s6 s632))
(define-fun s634 () bool (= s10 s632))
(define-fun s635 () bool (or s633 s634))
(define-fun s636 () bool (= s310 s409))
(define-fun s637 () bool (and s619 s636))
(define-fun s638 () bool (= s26 s632))
(define-fun s639 () bool (or s633 s638))
(define-fun s640 () bool (= s617 s632))
(define-fun s641 () bool (ite s623 s639 s640))
(define-fun s642 () bool (ite s637 s638 s641))
(define-fun s643 () bool (ite s618 s635 s642))
(define-fun s644 () int (seq.len s631))
(define-fun s645 () int (- s644 s13))
(define-fun s646 () (seq state) (seq.extract s631 s13 s645))
(define-fun s647 () state (seq.nth s646 s7))
(define-fun s648 () bool (= s6 s647))
(define-fun s649 () bool (= s10 s647))
(define-fun s650 () bool (or s648 s649))
(define-fun s651 () bool (= s329 s409))
(define-fun s652 () bool (and s634 s651))
(define-fun s653 () bool (= s26 s647))
(define-fun s654 () bool (or s648 s653))
(define-fun s655 () bool (= s632 s647))
(define-fun s656 () bool (ite s638 s654 s655))
(define-fun s657 () bool (ite s652 s653 s656))
(define-fun s658 () bool (ite s633 s650 s657))
(define-fun s659 () int (seq.len s646))
(define-fun s660 () int (- s659 s13))
(define-fun s661 () (seq state) (seq.extract s646 s13 s660))
(define-fun s662 () state (seq.nth s661 s7))
(define-fun s663 () bool (= s6 s662))
(define-fun s664 () bool (= s10 s662))
(define-fun s665 () bool (or s663 s664))
(define-fun s666 () bool (= s348 s409))
(define-fun s667 () bool (and s649 s666))
(define-fun s668 () bool (= s26 s662))
(define-fun s669 () bool (or s663 s668))
(define-fun s670 () bool (= s647 s662))
(define-fun s671 () bool (ite s653 s669 s670))
(define-fun s672 () bool (ite s667 s668 s671))
(define-fun s673 () bool (ite s648 s665 s672))
(define-fun s674 () int (seq.len s661))
(define-fun s675 () int (- s674 s13))
(define-fun s676 () (seq state) (seq.extract s661 s13 s675))
(define-fun s677 () state (seq.nth s676 s7))
(define-fun s678 () bool (= s6 s677))
(define-fun s679 () bool (= s10 s677))
(define-fun s680 () bool (or s678 s679))
(define-fun s681 () bool (= s367 s409))
(define-fun s682 () bool (and s664 s681))
(define-fun s683 () bool (= s26 s677))
(define-fun s684 () bool (or s678 s683))
(define-fun s685 () bool (= s662 s677))
(define-fun s686 () bool (ite s668 s684 s685))
(define-fun s687 () bool (ite s682 s683 s686))
(define-fun s688 () bool (ite s663 s680 s687))
(define-fun s689 () bool (and s673 s688))
(define-fun s690 () bool (and s658 s689))
(define-fun s691 () bool (and s643 s690))
(define-fun s692 () bool (and s628 s691))
(define-fun s693 () bool (and s613 s692))
(define-fun s694 () bool (and s598 s693))
(define-fun s695 () bool (and s583 s694))
(define-fun s696 () bool (and s568 s695))
(define-fun s697 () bool (and s553 s696))
(define-fun s698 () bool (and s538 s697))
(define-fun s699 () bool (and s523 s698))
(define-fun s700 () bool (and s508 s699))
(define-fun s701 () bool (and s493 s700))
(define-fun s702 () bool (and s478 s701))
(define-fun s703 () bool (and s463 s702))
(define-fun s704 () bool (and s448 s703))
(define-fun s705 () bool (and s433 s704))
(define-fun s706 () bool (and s418 s705))
(define-fun s707 () bool (and s402 s706))
(define-fun s708 () bool (and s400 s707))
(define-fun s709 () bool (and s398 s708))
(define-fun s710 () bool (= s4 s20))
(define-fun s711 () int (seq.nth s2 s7))
(define-fun s712 () bool (= s13 s711))
(define-fun s713 () bool (= s409 s711))
(define-fun s714 () bool (or s712 s713))
(define-fun s715 () bool (or s28 s413))
(define-fun s716 () bool (not s715))
(define-fun s717 () bool (or s712 s716))
(define-fun s718 () bool (or s24 s410))
(define-fun s719 () bool (or s27 s412))
(define-fun s720 () bool (not s719))
(define-fun s721 () bool (= s23 s711))
(define-fun s722 () bool (or s720 s721))
(define-fun s723 () bool (or s45 s426))
(define-fun s724 () bool (or s47 s428))
(define-fun s725 () bool (not s724))
(define-fun s726 () bool (= s23 s44))
(define-fun s727 () bool (or s725 s726))
(define-fun s728 () bool (or s64 s441))
(define-fun s729 () bool (or s66 s443))
(define-fun s730 () bool (not s729))
(define-fun s731 () bool (= s44 s63))
(define-fun s732 () bool (or s730 s731))
(define-fun s733 () bool (or s83 s456))
(define-fun s734 () bool (or s85 s458))
(define-fun s735 () bool (not s734))
(define-fun s736 () bool (= s63 s82))
(define-fun s737 () bool (or s735 s736))
(define-fun s738 () bool (or s102 s471))
(define-fun s739 () bool (or s104 s473))
(define-fun s740 () bool (not s739))
(define-fun s741 () bool (= s82 s101))
(define-fun s742 () bool (or s740 s741))
(define-fun s743 () bool (or s121 s486))
(define-fun s744 () bool (or s123 s488))
(define-fun s745 () bool (not s744))
(define-fun s746 () bool (= s101 s120))
(define-fun s747 () bool (or s745 s746))
(define-fun s748 () bool (or s140 s501))
(define-fun s749 () bool (or s142 s503))
(define-fun s750 () bool (not s749))
(define-fun s751 () bool (= s120 s139))
(define-fun s752 () bool (or s750 s751))
(define-fun s753 () bool (or s159 s516))
(define-fun s754 () bool (or s161 s518))
(define-fun s755 () bool (not s754))
(define-fun s756 () bool (= s139 s158))
(define-fun s757 () bool (or s755 s756))
(define-fun s758 () bool (or s178 s531))
(define-fun s759 () bool (or s180 s533))
(define-fun s760 () bool (not s759))
(define-fun s761 () bool (= s158 s177))
(define-fun s762 () bool (or s760 s761))
(define-fun s763 () bool (or s197 s546))
(define-fun s764 () bool (or s199 s548))
(define-fun s765 () bool (not s764))
(define-fun s766 () bool (= s177 s196))
(define-fun s767 () bool (or s765 s766))
(define-fun s768 () bool (or s216 s561))
(define-fun s769 () bool (or s218 s563))
(define-fun s770 () bool (not s769))
(define-fun s771 () bool (= s196 s215))
(define-fun s772 () bool (or s770 s771))
(define-fun s773 () bool (or s235 s576))
(define-fun s774 () bool (or s237 s578))
(define-fun s775 () bool (not s774))
(define-fun s776 () bool (= s215 s234))
(define-fun s777 () bool (or s775 s776))
(define-fun s778 () bool (or s254 s591))
(define-fun s779 () bool (or s256 s593))
(define-fun s780 () bool (not s779))
(define-fun s781 () bool (= s234 s253))
(define-fun s782 () bool (or s780 s781))
(define-fun s783 () bool (or s273 s606))
(define-fun s784 () bool (or s275 s608))
(define-fun s785 () bool (not s784))
(define-fun s786 () bool (= s253 s272))
(define-fun s787 () bool (or s785 s786))
(define-fun s788 () bool (or s292 s621))
(define-fun s789 () bool (or s294 s623))
(define-fun s790 () bool (not s789))
(define-fun s791 () bool (= s272 s291))
(define-fun s792 () bool (or s790 s791))
(define-fun s793 () bool (or s311 s636))
(define-fun s794 () bool (or s313 s638))
(define-fun s795 () bool (not s794))
(define-fun s796 () bool (= s291 s310))
(define-fun s797 () bool (or s795 s796))
(define-fun s798 () bool (or s330 s651))
(define-fun s799 () bool (or s332 s653))
(define-fun s800 () bool (not s799))
(define-fun s801 () bool (= s310 s329))
(define-fun s802 () bool (or s800 s801))
(define-fun s803 () bool (or s349 s666))
(define-fun s804 () bool (or s351 s668))
(define-fun s805 () bool (not s804))
(define-fun s806 () bool (= s329 s348))
(define-fun s807 () bool (or s805 s806))
(define-fun s808 () bool (or s368 s681))
(define-fun s809 () bool (or s370 s683))
(define-fun s810 () bool (not s809))
(define-fun s811 () bool (= s348 s367))
(define-fun s812 () bool (or s810 s811))
(define-fun s813 () bool (and s808 s812))
(define-fun s814 () bool (and s807 s813))
(define-fun s815 () bool (and s803 s814))
(define-fun s816 () bool (and s802 s815))
(define-fun s817 () bool (and s798 s816))
(define-fun s818 () bool (and s797 s817))
(define-fun s819 () bool (and s793 s818))
(define-fun s820 () bool (and s792 s819))
(define-fun s821 () bool (and s788 s820))
(define-fun s822 () bool (and s787 s821))
(define-fun s823 () bool (and s783 s822))
(define-fun s824 () bool (and s782 s823))
(define-fun s825 () bool (and s778 s824))
(define-fun s826 () bool (and s777 s825))
(define-fun s827 () bool (and s773 s826))
(define-fun s828 () bool (and s772 s827))
(define-fun s829 () bool (and s768 s828))
(define-fun s830 () bool (and s767 s829))
(define-fun s831 () bool (and s763 s830))
(define-fun s832 () bool (and s762 s831))
(define-fun s833 () bool (and s758 s832))
(define-fun s834 () bool (and s757 s833))
(define-fun s835 () bool (and s753 s834))
(define-fun s836 () bool (and s752 s835))
(define-fun s837 () bool (and s748 s836))
(define-fun s838 () bool (and s747 s837))
(define-fun s839 () bool (and s743 s838))
(define-fun s840 () bool (and s742 s839))
(define-fun s841 () bool (and s738 s840))
(define-fun s842 () bool (and s737 s841))
(define-fun s843 () bool (and s733 s842))
(define-fun s844 () bool (and s732 s843))
(define-fun s845 () bool (and s728 s844))
(define-fun s846 () bool (and s727 s845))
(define-fun s847 () bool (and s723 s846))
(define-fun s848 () bool (and s722 s847))
(define-fun s849 () bool (and s718 s848))
(define-fun s850 () bool (and s717 s849))
(define-fun s851 () bool (and s714 s850))
(define-fun s852 () bool (and s712 s851))
(define-fun s853 () bool (and s710 s852))
(define-fun s854 () bool (= s3 s7))
(define-fun s855 () bool (= s7 s397))
(define-fun s856 () bool (or s854 s855))
(define-fun s858 () bool (distinct s8 s26))
(define-fun s859 () bool (distinct s26 s399))
(define-fun s860 () bool (or s858 s859))
(define-fun s861 () (seq bool) (seq.unit s860))
(define-fun s862 () bool (= s7 s34))
(define-fun s863 () bool (= s7 s419))
(define-fun s864 () bool (or s862 s863))
(define-fun s865 () bool (distinct s16 s26))
(define-fun s866 () bool (distinct s26 s405))
(define-fun s867 () bool (or s865 s866))
(define-fun s868 () (seq bool) (seq.unit s867))
(define-fun s869 () bool (= s7 s53))
(define-fun s870 () bool (= s7 s434))
(define-fun s871 () bool (or s869 s870))
(define-fun s872 () bool (distinct s26 s37))
(define-fun s873 () bool (distinct s26 s422))
(define-fun s874 () bool (or s872 s873))
(define-fun s875 () (seq bool) (seq.unit s874))
(define-fun s876 () bool (= s7 s72))
(define-fun s877 () bool (= s7 s449))
(define-fun s878 () bool (or s876 s877))
(define-fun s879 () bool (distinct s26 s56))
(define-fun s880 () bool (distinct s26 s437))
(define-fun s881 () bool (or s879 s880))
(define-fun s882 () (seq bool) (seq.unit s881))
(define-fun s883 () bool (= s7 s91))
(define-fun s884 () bool (= s7 s464))
(define-fun s885 () bool (or s883 s884))
(define-fun s886 () bool (distinct s26 s75))
(define-fun s887 () bool (distinct s26 s452))
(define-fun s888 () bool (or s886 s887))
(define-fun s889 () (seq bool) (seq.unit s888))
(define-fun s890 () bool (= s7 s110))
(define-fun s891 () bool (= s7 s479))
(define-fun s892 () bool (or s890 s891))
(define-fun s893 () bool (distinct s26 s94))
(define-fun s894 () bool (distinct s26 s467))
(define-fun s895 () bool (or s893 s894))
(define-fun s896 () (seq bool) (seq.unit s895))
(define-fun s897 () bool (= s7 s129))
(define-fun s898 () bool (= s7 s494))
(define-fun s899 () bool (or s897 s898))
(define-fun s900 () bool (distinct s26 s113))
(define-fun s901 () bool (distinct s26 s482))
(define-fun s902 () bool (or s900 s901))
(define-fun s903 () (seq bool) (seq.unit s902))
(define-fun s904 () bool (= s7 s148))
(define-fun s905 () bool (= s7 s509))
(define-fun s906 () bool (or s904 s905))
(define-fun s907 () bool (distinct s26 s132))
(define-fun s908 () bool (distinct s26 s497))
(define-fun s909 () bool (or s907 s908))
(define-fun s910 () (seq bool) (seq.unit s909))
(define-fun s911 () bool (= s7 s167))
(define-fun s912 () bool (= s7 s524))
(define-fun s913 () bool (or s911 s912))
(define-fun s914 () bool (distinct s26 s151))
(define-fun s915 () bool (distinct s26 s512))
(define-fun s916 () bool (or s914 s915))
(define-fun s917 () (seq bool) (seq.unit s916))
(define-fun s918 () bool (= s7 s186))
(define-fun s919 () bool (= s7 s539))
(define-fun s920 () bool (or s918 s919))
(define-fun s921 () bool (distinct s26 s170))
(define-fun s922 () bool (distinct s26 s527))
(define-fun s923 () bool (or s921 s922))
(define-fun s924 () (seq bool) (seq.unit s923))
(define-fun s925 () bool (= s7 s205))
(define-fun s926 () bool (= s7 s554))
(define-fun s927 () bool (or s925 s926))
(define-fun s928 () bool (distinct s26 s189))
(define-fun s929 () bool (distinct s26 s542))
(define-fun s930 () bool (or s928 s929))
(define-fun s931 () (seq bool) (seq.unit s930))
(define-fun s932 () bool (= s7 s224))
(define-fun s933 () bool (= s7 s569))
(define-fun s934 () bool (or s932 s933))
(define-fun s935 () bool (distinct s26 s208))
(define-fun s936 () bool (distinct s26 s557))
(define-fun s937 () bool (or s935 s936))
(define-fun s938 () (seq bool) (seq.unit s937))
(define-fun s939 () bool (= s7 s243))
(define-fun s940 () bool (= s7 s584))
(define-fun s941 () bool (or s939 s940))
(define-fun s942 () bool (distinct s26 s227))
(define-fun s943 () bool (distinct s26 s572))
(define-fun s944 () bool (or s942 s943))
(define-fun s945 () (seq bool) (seq.unit s944))
(define-fun s946 () bool (= s7 s262))
(define-fun s947 () bool (= s7 s599))
(define-fun s948 () bool (or s946 s947))
(define-fun s949 () bool (distinct s26 s246))
(define-fun s950 () bool (distinct s26 s587))
(define-fun s951 () bool (or s949 s950))
(define-fun s952 () (seq bool) (seq.unit s951))
(define-fun s953 () bool (= s7 s281))
(define-fun s954 () bool (= s7 s614))
(define-fun s955 () bool (or s953 s954))
(define-fun s956 () bool (distinct s26 s265))
(define-fun s957 () bool (distinct s26 s602))
(define-fun s958 () bool (or s956 s957))
(define-fun s959 () (seq bool) (seq.unit s958))
(define-fun s960 () bool (= s7 s300))
(define-fun s961 () bool (= s7 s629))
(define-fun s962 () bool (or s960 s961))
(define-fun s963 () bool (distinct s26 s284))
(define-fun s964 () bool (distinct s26 s617))
(define-fun s965 () bool (or s963 s964))
(define-fun s966 () (seq bool) (seq.unit s965))
(define-fun s967 () bool (= s7 s319))
(define-fun s968 () bool (= s7 s644))
(define-fun s969 () bool (or s967 s968))
(define-fun s970 () bool (distinct s26 s303))
(define-fun s971 () bool (distinct s26 s632))
(define-fun s972 () bool (or s970 s971))
(define-fun s973 () (seq bool) (seq.unit s972))
(define-fun s974 () bool (= s7 s338))
(define-fun s975 () bool (= s7 s659))
(define-fun s976 () bool (or s974 s975))
(define-fun s977 () bool (distinct s26 s322))
(define-fun s978 () bool (distinct s26 s647))
(define-fun s979 () bool (or s977 s978))
(define-fun s980 () (seq bool) (seq.unit s979))
(define-fun s981 () bool (= s7 s357))
(define-fun s982 () bool (= s7 s674))
(define-fun s983 () bool (or s981 s982))
(define-fun s984 () bool (distinct s26 s341))
(define-fun s985 () bool (distinct s26 s662))
(define-fun s986 () bool (or s984 s985))
(define-fun s987 () (seq bool) (seq.unit s986))
(define-fun s988 () int (seq.len s359))
(define-fun s989 () bool (= s7 s988))
(define-fun s990 () int (seq.len s676))
(define-fun s991 () bool (= s7 s990))
(define-fun s992 () bool (or s989 s991))
(define-fun s993 () bool (distinct s26 s360))
(define-fun s994 () bool (distinct s26 s677))
(define-fun s995 () bool (or s993 s994))
(define-fun s996 () (seq bool) (seq.unit s995))
(define-fun s997 () (seq bool) (ite s992 s857 s996))
(define-fun s998 () (seq bool) (seq.++ s987 s997))
(define-fun s999 () (seq bool) (ite s983 s857 s998))
(define-fun s1000 () (seq bool) (seq.++ s980 s999))
(define-fun s1001 () (seq bool) (ite s976 s857 s1000))
(define-fun s1002 () (seq bool) (seq.++ s973 s1001))
(define-fun s1003 () (seq bool) (ite s969 s857 s1002))
(define-fun s1004 () (seq bool) (seq.++ s966 s1003))
(define-fun s1005 () (seq bool) (ite s962 s857 s1004))
(define-fun s1006 () (seq bool) (seq.++ s959 s1005))
(define-fun s1007 () (seq bool) (ite s955 s857 s1006))
(define-fun s1008 () (seq bool) (seq.++ s952 s1007))
(define-fun s1009 () (seq bool) (ite s948 s857 s1008))
(define-fun s1010 () (seq bool) (seq.++ s945 s1009))
(define-fun s1011 () (seq bool) (ite s941 s857 s1010))
(define-fun s1012 () (seq bool) (seq.++ s938 s1011))
(define-fun s1013 () (seq bool) (ite s934 s857 s1012))
(define-fun s1014 () (seq bool) (seq.++ s931 s1013))
(define-fun s1015 () (seq bool) (ite s927 s857 s1014))
(define-fun s1016 () (seq bool) (seq.++ s924 s1015))
(define-fun s1017 () (seq bool) (ite s920 s857 s1016))
(define-fun s1018 () (seq bool) (seq.++ s917 s1017))
(define-fun s1019 () (seq bool) (ite s913 s857 s1018))
(define-fun s1020 () (seq bool) (seq.++ s910 s1019))
(define-fun s1021 () (seq bool) (ite s906 s857 s1020))
(define-fun s1022 () (seq bool) (seq.++ s903 s1021))
(define-fun s1023 () (seq bool) (ite s899 s857 s1022))
(define-fun s1024 () (seq bool) (seq.++ s896 s1023))
(define-fun s1025 () (seq bool) (ite s892 s857 s1024))
(define-fun s1026 () (seq bool) (seq.++ s889 s1025))
(define-fun s1027 () (seq bool) (ite s885 s857 s1026))
(define-fun s1028 () (seq bool) (seq.++ s882 s1027))
(define-fun s1029 () (seq bool) (ite s878 s857 s1028))
(define-fun s1030 () (seq bool) (seq.++ s875 s1029))
(define-fun s1031 () (seq bool) (ite s871 s857 s1030))
(define-fun s1032 () (seq bool) (seq.++ s868 s1031))
(define-fun s1033 () (seq bool) (ite s864 s857 s1032))
(define-fun s1034 () (seq bool) (seq.++ s861 s1033))
(define-fun s1035 () (seq bool) (ite s856 s857 s1034))
(define-fun s1036 () int (seq.len s1035))
(define-fun s1037 () bool (= s7 s1036))
(define-fun s1038 () bool (seq.nth s1035 s7))
(define-fun s1039 () int (- s1036 s13))
(define-fun s1040 () (seq bool) (seq.extract s1035 s13 s1039))
(define-fun s1041 () int (seq.len s1040))
(define-fun s1042 () bool (= s7 s1041))
(define-fun s1043 () bool (seq.nth s1040 s7))
(define-fun s1044 () int (- s1041 s13))
(define-fun s1045 () (seq bool) (seq.extract s1040 s13 s1044))
(define-fun s1046 () int (seq.len s1045))
(define-fun s1047 () bool (= s7 s1046))
(define-fun s1048 () bool (seq.nth s1045 s7))
(define-fun s1049 () int (- s1046 s13))
(define-fun s1050 () (seq bool) (seq.extract s1045 s13 s1049))
(define-fun s1051 () int (seq.len s1050))
(define-fun s1052 () bool (= s7 s1051))
(define-fun s1053 () bool (seq.nth s1050 s7))
(define-fun s1054 () int (- s1051 s13))
(define-fun s1055 () (seq bool) (seq.extract s1050 s13 s1054))
(define-fun s1056 () int (seq.len s1055))
(define-fun s1057 () bool (= s7 s1056))
(define-fun s1058 () bool (seq.nth s1055 s7))
(define-fun s1059 () int (- s1056 s13))
(define-fun s1060 () (seq bool) (seq.extract s1055 s13 s1059))
(define-fun s1061 () int (seq.len s1060))
(define-fun s1062 () bool (= s7 s1061))
(define-fun s1063 () bool (seq.nth s1060 s7))
(define-fun s1064 () int (- s1061 s13))
(define-fun s1065 () (seq bool) (seq.extract s1060 s13 s1064))
(define-fun s1066 () int (seq.len s1065))
(define-fun s1067 () bool (= s7 s1066))
(define-fun s1068 () bool (seq.nth s1065 s7))
(define-fun s1069 () int (- s1066 s13))
(define-fun s1070 () (seq bool) (seq.extract s1065 s13 s1069))
(define-fun s1071 () int (seq.len s1070))
(define-fun s1072 () bool (= s7 s1071))
(define-fun s1073 () bool (seq.nth s1070 s7))
(define-fun s1074 () int (- s1071 s13))
(define-fun s1075 () (seq bool) (seq.extract s1070 s13 s1074))
(define-fun s1076 () int (seq.len s1075))
(define-fun s1077 () bool (= s7 s1076))
(define-fun s1078 () bool (seq.nth s1075 s7))
(define-fun s1079 () int (- s1076 s13))
(define-fun s1080 () (seq bool) (seq.extract s1075 s13 s1079))
(define-fun s1081 () int (seq.len s1080))
(define-fun s1082 () bool (= s7 s1081))
(define-fun s1083 () bool (seq.nth s1080 s7))
(define-fun s1084 () int (- s1081 s13))
(define-fun s1085 () (seq bool) (seq.extract s1080 s13 s1084))
(define-fun s1086 () int (seq.len s1085))
(define-fun s1087 () bool (= s7 s1086))
(define-fun s1088 () bool (seq.nth s1085 s7))
(define-fun s1089 () int (- s1086 s13))
(define-fun s1090 () (seq bool) (seq.extract s1085 s13 s1089))
(define-fun s1091 () int (seq.len s1090))
(define-fun s1092 () bool (= s7 s1091))
(define-fun s1093 () bool (seq.nth s1090 s7))
(define-fun s1094 () int (- s1091 s13))
(define-fun s1095 () (seq bool) (seq.extract s1090 s13 s1094))
(define-fun s1096 () int (seq.len s1095))
(define-fun s1097 () bool (= s7 s1096))
(define-fun s1098 () bool (seq.nth s1095 s7))
(define-fun s1099 () int (- s1096 s13))
(define-fun s1100 () (seq bool) (seq.extract s1095 s13 s1099))
(define-fun s1101 () int (seq.len s1100))
(define-fun s1102 () bool (= s7 s1101))
(define-fun s1103 () bool (seq.nth s1100 s7))
(define-fun s1104 () int (- s1101 s13))
(define-fun s1105 () (seq bool) (seq.extract s1100 s13 s1104))
(define-fun s1106 () int (seq.len s1105))
(define-fun s1107 () bool (= s7 s1106))
(define-fun s1108 () bool (seq.nth s1105 s7))
(define-fun s1109 () int (- s1106 s13))
(define-fun s1110 () (seq bool) (seq.extract s1105 s13 s1109))
(define-fun s1111 () int (seq.len s1110))
(define-fun s1112 () bool (= s7 s1111))
(define-fun s1113 () bool (seq.nth s1110 s7))
(define-fun s1114 () int (- s1111 s13))
(define-fun s1115 () (seq bool) (seq.extract s1110 s13 s1114))
(define-fun s1116 () int (seq.len s1115))
(define-fun s1117 () bool (= s7 s1116))
(define-fun s1118 () bool (seq.nth s1115 s7))
(define-fun s1119 () int (- s1116 s13))
(define-fun s1120 () (seq bool) (seq.extract s1115 s13 s1119))
(define-fun s1121 () int (seq.len s1120))
(define-fun s1122 () bool (= s7 s1121))
(define-fun s1123 () bool (seq.nth s1120 s7))
(define-fun s1124 () int (- s1121 s13))
(define-fun s1125 () (seq bool) (seq.extract s1120 s13 s1124))
(define-fun s1126 () int (seq.len s1125))
(define-fun s1127 () bool (= s7 s1126))
(define-fun s1128 () bool (seq.nth s1125 s7))
(define-fun s1129 () int (- s1126 s13))
(define-fun s1130 () (seq bool) (seq.extract s1125 s13 s1129))
(define-fun s1131 () int (seq.len s1130))
(define-fun s1132 () bool (= s7 s1131))
(define-fun s1133 () bool (seq.nth s1130 s7))
(define-fun s1134 () bool (or s1132 s1133))
(define-fun s1135 () bool (and s1128 s1134))
(define-fun s1136 () bool (or s1127 s1135))
(define-fun s1137 () bool (and s1123 s1136))
(define-fun s1138 () bool (or s1122 s1137))
(define-fun s1139 () bool (and s1118 s1138))
(define-fun s1140 () bool (or s1117 s1139))
(define-fun s1141 () bool (and s1113 s1140))
(define-fun s1142 () bool (or s1112 s1141))
(define-fun s1143 () bool (and s1108 s1142))
(define-fun s1144 () bool (or s1107 s1143))
(define-fun s1145 () bool (and s1103 s1144))
(define-fun s1146 () bool (or s1102 s1145))
(define-fun s1147 () bool (and s1098 s1146))
(define-fun s1148 () bool (or s1097 s1147))
(define-fun s1149 () bool (and s1093 s1148))
(define-fun s1150 () bool (or s1092 s1149))
(define-fun s1151 () bool (and s1088 s1150))
(define-fun s1152 () bool (or s1087 s1151))
(define-fun s1153 () bool (and s1083 s1152))
(define-fun s1154 () bool (or s1082 s1153))
(define-fun s1155 () bool (and s1078 s1154))
(define-fun s1156 () bool (or s1077 s1155))
(define-fun s1157 () bool (and s1073 s1156))
(define-fun s1158 () bool (or s1072 s1157))
(define-fun s1159 () bool (and s1068 s1158))
(define-fun s1160 () bool (or s1067 s1159))
(define-fun s1161 () bool (and s1063 s1160))
(define-fun s1162 () bool (or s1062 s1161))
(define-fun s1163 () bool (and s1058 s1162))
(define-fun s1164 () bool (or s1057 s1163))
(define-fun s1165 () bool (and s1053 s1164))
(define-fun s1166 () bool (or s1052 s1165))
(define-fun s1167 () bool (and s1048 s1166))
(define-fun s1168 () bool (or s1047 s1167))
(define-fun s1169 () bool (and s1043 s1168))
(define-fun s1170 () bool (or s1042 s1169))
(define-fun s1171 () bool (and s1038 s1170))
(define-fun s1172 () bool (or s1037 s1171))
(define-fun s1173 () bool (not s1172))
(assert s396)
(assert s709)
(assert s853)
(assert s1173)
(check-sat)